import { c as create_ssr_component, a as subscribe } from "../../../../chunks/ssr.js";
/* empty css                     */
import { a as authStore } from "../../../../chunks/authStore.js";
import "firebase/firestore";
import "../../../../chunks/client.js";
const css = {
  code: ".modal-open.svelte-11d8rkn .modal-box.svelte-11d8rkn{max-width:90%;width:100%}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n    import \\"../../../app.css\\";\\n    import { authStore, authHandlers } from '$lib/authStore';\\n    import { onMount } from 'svelte';\\n    import { getDoc, updateDoc } from 'firebase/firestore';\\n    import { goto } from \\"$app/navigation\\";\\n\\n    let user = {\\n      name: '',\\n      email: '',\\n      phone: '',\\n      type: ''\\n    };\\n    let showModal = false;\\n    let loading = true;\\n\\n    onMount(async () => {\\n        await fetchUserData();\\n    })\\n  \\n    async function fetchUserData() {\\n      if ($authStore.userRef) {\\n        const userDoc = await getDoc($authStore.userRef);\\n        if (userDoc.exists()) {\\n          user = userDoc.data();\\n        } else {\\n          console.log(\\"No such document!\\");\\n        }\\n        loading = false;\\n      } else {\\n        console.log(\\"No current user in authStore\\");\\n        loading = false;\\n      }\\n    }\\n  \\n    async function updateUser() {\\n      if ($authStore.userRef) {\\n        await updateDoc($authStore.userRef, {\\n          name: user.name,\\n          phone: user.phone\\n        });\\n        showModal = false;\\n      }\\n    }\\n\\n    async function logout() {\\n        try {\\n            await authHandlers.logout(); // Assuming you have a logout function in your authStore\\n            await goto('/auth/sign-up'); // Redirect to the login page\\n        } catch (error) {\\n        console.error(\\"Logout failed\\", error);\\n        }\\n    }\\n\\n<\/script>\\n\\n<div class=\\"min-h-screen flex items-center justify-center p-4\\">\\n    {#if loading}\\n        <span class=\\"loading loading-infinity loading-lg text-white\\"></span>\\n    {:else}\\n        <div class=\\"bg-gradient-to-r from-[#833ab4] from-10% via-[#fd1d1d] via-30% to-[#fcb045] to-90% p-2 rounded-lg\\">\\n            <div class=\\"w-full max-w-sm shadow-lg rounded-lg p-6 bg-black flex flex-col items-center\\">\\n                <p class=\\"text-white font-bold mb-2\\"><span class=\\"bg-gradient-to-r from-[#833ab4] from-10% via-[#fd1d1d] via-30% to-[#fcb045] to-90% inline-block text-transparent bg-clip-text\\">Name:</span> {user.name}</p>\\n                <p class=\\"text-white font-bold mb-2\\"><span class=\\"bg-gradient-to-r from-[#833ab4] from-10% via-[#fd1d1d] via-30% to-[#fcb045] to-90% inline-block text-transparent bg-clip-text\\">Email:</span> {user.email}</p>\\n                <p class=\\"text-white font-bold mb-2\\"><span class=\\"bg-gradient-to-r from-[#833ab4] from-10% via-[#fd1d1d] via-30% to-[#fcb045] to-90% inline-block text-transparent bg-clip-text\\">Phone:</span> {user.phone}</p>\\n                <p class=\\"text-white font-bold mb-2\\"><span class=\\"bg-gradient-to-r from-[#833ab4] from-10% via-[#fd1d1d] via-30% to-[#fcb045] to-90% inline-block text-transparent bg-clip-text\\">Account Type:</span> {user.type}</p>\\n                <div class=\\"card-actions justify-end\\">\\n                    <button class=\\"btn bg-gradient-to-r from-[#833ab4] from-10% via-[#fd1d1d] via-30% to-[#fcb045] to-90% !text-white !rounded-lg border-none mt-4\\" on:click={() => showModal = true}>Edit</button>\\n                    <button class=\\"btn btn-secondary to-90% !text-white !rounded-lg border-none mt-4\\" on:click={logout}>Sign Out</button>\\n                </div>\\n            </div>\\n        </div>\\n    {/if}\\n  \\n    {#if showModal}\\n      <div class=\\"modal modal-open\\">\\n        <div class=\\"modal-box\\">\\n          <h3 class=\\"font-bold text-lg\\">Edit Profile</h3>\\n          <div class=\\"py-4\\">\\n            <div class=\\"form-control\\">\\n              <label class=\\"label\\">\\n                <span class=\\"label-text\\">Name</span>\\n              </label>\\n              <input type=\\"text\\" class=\\"input input-bordered\\" bind:value={user.name} />\\n            </div>\\n            <div class=\\"form-control\\">\\n              <label class=\\"label\\">\\n                <span class=\\"label-text\\">Phone</span>\\n              </label>\\n              <input type=\\"text\\" class=\\"input input-bordered\\" bind:value={user.phone} />\\n            </div>\\n          </div>\\n          <div class=\\"modal-action\\">\\n            <button class=\\"btn btn-primary\\" on:click={updateUser}>Update</button>\\n            <button class=\\"btn\\" on:click={() => showModal = false}>Cancel</button>\\n          </div>\\n        </div>\\n      </div>\\n    {/if}\\n</div>\\n\\n<style>\\n    .modal-open .modal-box {\\n      max-width: 90%;\\n      width: 100%;\\n    }\\n    .border-gradient-to-r {\\n        border: 4px solid;\\n        border-image-slice: 1;\\n        border-width: 4px;\\n        border-image-source: linear-gradient(to right, #833ab4 10%, #fd1d1d 30%, #fcb045 90%);\\n    }\\n</style>\\n"],"names":[],"mappings":"AAsGI,0BAAW,CAAC,yBAAW,CACrB,SAAS,CAAE,GAAG,CACd,KAAK,CAAE,IACT"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_authStore;
  $$unsubscribe_authStore = subscribe(authStore, (value) => value);
  $$result.css.add(css);
  $$unsubscribe_authStore();
  return `<div class="min-h-screen flex items-center justify-center p-4">${`<span class="loading loading-infinity loading-lg text-white"></span>`} ${``} </div>`;
});
export {
  Page as default
};
